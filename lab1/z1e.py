import math
from datetime import datetime, timedelta

# Funkcja do obliczania biorytmu
def calculate_biorhythm(t, cycle):
    return math.sin((2 * math.pi * t) / cycle)

# Pobranie danych od użytkownika
name = input("Podaj swoje imię: ")
year = int(input("Podaj rok urodzenia: "))
month = int(input("Podaj miesiąc urodzenia (1-12): "))
day = int(input("Podaj dzień urodzenia: "))

# Obliczenie liczby dni od urodzenia do dzisiaj
birth_date = datetime(year, month, day)
today = datetime.now()
delta = today - birth_date
days_alive = delta.days

# Obliczenie biorytmów
physical = calculate_biorhythm(days_alive, 23)
emotional = calculate_biorhythm(days_alive, 28)
intellectual = calculate_biorhythm(days_alive, 33)

# Wyświetlenie wyników
print(f"\nWitaj, {name}!")
print(f"Dzisiaj jest twój {days_alive} dzień życia.")
print(f"Twój fizyczny biorytm: {physical:.2f}")
print(f"Twój emocjonalny biorytm: {emotional:.2f}")
print(f"Twój intelektualny biorytm: {intellectual:.2f}")

# Sprawdzenie wyników i wyświetlenie odpowiednich komunikatów
def check_biorhythm(value, name, days_alive, cycle):
    if value > 0.5:
        print(f"Gratulacje! Twój {name} biorytm jest dzisiaj wysoki!")
    elif value < -0.5:
        print(f"Przykro mi, twój {name} biorytm jest dzisiaj niski.")
        # Sprawdzenie wyniku na następny dzień
        next_day_value = calculate_biorhythm(days_alive + 1, cycle)
        if next_day_value > value:
            print("Nie martw się. Jutro będzie lepiej!")
        else:
            print("Niestety, jutro może być jeszcze trudniej.")

check_biorhythm(physical, "fizyczny", days_alive, 23)
check_biorhythm(emotional, "emocjonalny", days_alive, 28)
check_biorhythm(intellectual, "intelektualny", days_alive, 33)

# this was generated by chatGPT in few seconds...